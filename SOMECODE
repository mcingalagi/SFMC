<!DOCTYPE html>
<html>
<head>
    <title>File Upload Example</title>
</head>
<body>
    <form id="myForm" method="post" action="%%=RequestParameter('PAGEURL')=%%">
        <!-- File Input Fields -->
        <input type="file" name="fileInput1"><br>
        <input type="file" name="fileInput2"><br>
        <input type="file" name="fileInput3"><br>
        <input type="file" name="fileInput4"><br>

        <!-- Other Form Fields -->
        First Name: <input type="text" name="FirstName"><br>
        Last Name: <input type="text" name="LastName"><br>
        Email: <input type="email" name="Email"><br>
        Company Name: <input type="text" name="CompanyName"><br>

        <input type="hidden" id="FileData" name="FileData">
        <input type="hidden" name="submitted" value="true">
        <input type="submit" value="Submit">
    </form>

    <script>
        document.getElementById('myForm').addEventListener('submit', function(event) {
            event.preventDefault(); // Prevent form submission
            var fileInputs = document.querySelectorAll('input[type="file"]');
            var fileData = [];

            fileInputs.forEach(function(fileInput) {
                if (fileInput.files.length > 0) {
                    var file = fileInput.files[0];
                    var reader = new FileReader();

                    reader.onload = function(event) {
                        var fileContent = event.target.result.split(',')[1]; // Base64-encoded file content
                        var fileDetails = {
                            fileName: file.name,
                            fileType: file.type,
                            fileContent: fileContent
                        };
                        fileData.push(fileDetails); // Add file details to array

                        if (fileData.length === fileInputs.length) {
                            document.getElementById('FileData').value = JSON.stringify(fileData);
                            console.log('Submitting form...');
                            document.getElementById('myForm').submit(); // Submit the form after processing files
                        }
                    };

                    reader.readAsDataURL(file); // Read file as data URL
                }
            });
        });
    </script>
</body>
</html>





%%[
VAR @FirstName, @LastName, @Email, @CompanyName, @FileData, @JsonObject, @LeadId

IF RequestParameter('submitted') == 'true' THEN /* Check if form is submitted */
    SET @FirstName = RequestParameter('FirstName')
    SET @LastName = RequestParameter('LastName')
    SET @Email = RequestParameter('Email')
    SET @CompanyName = RequestParameter('CompanyName')
    SET @FileData = RequestParameter('FileData') /* JSON string containing file details */

    /* Execute SSJS to parse JSON string */
    SET @SSJS = "<script runat='server'>Platform.Load('core','1'); var JsonObject = Platform.Function.ParseJSON('" + @FileData + "'); Variable.SetValue('@JsonObject', JsonObject);</script>"
    Output(Concat(@SSJS))

    /* Retrieve parsed values from SSJS and set to AMPscript variables */
    SET @JsonObject = AttributeValue('@JsonObject')
    SET @FileCount = 0 /* Initialize file count */

    IF NOT EMPTY(@JsonObject) THEN
        FOR @i = 1 TO RowCount(@JsonObject) DO
            SET @FileCount = Add(@FileCount, 1) /* Increment file count */
            SET @FileDetails = Row(@JsonObject, @i)
            SET @FileName = Field(@FileDetails, 'fileName')
            SET @FileType = Field(@FileDetails, 'fileType')
            SET @FileContent = Field(@FileDetails, 'fileContent')

            /* Create lead in Salesforce */
            SET @LeadId = CreateSalesforceObject(
                'Lead', 4, /* 4 fields to create */
                'FirstName', @FirstName,
                'LastName', @LastName,
                'Email', @Email,
                'Company', @CompanyName
            )

            /* Check if lead creation is successful */
            IF NOT EMPTY(@LeadId) THEN
                /* Create ContentVersion for each file */
                SET @ContentVersionId = CreateSalesforceObject(
                    'ContentVersion', 3, /* 3 fields to create */
                    'Title', @FileName,
                    'PathOnClient', @FileName,
                    'VersionData', @FileContent
                )

                /* Create ContentDocument for each file */
                SET @ContentDocumentId = CreateSalesforceObject(
                    'ContentDocument', 0 /* No fields to create */
                )

                /* Create ContentDocumentLink to associate ContentDocument with lead */
                CreateSalesforceObject(
                    'ContentDocumentLink', 4, /* 4 fields to create */
                    'ContentDocumentId', @ContentDocumentId,
                    'LinkedEntityId', @LeadId,
                    'ShareType', 'V',
                    'Visibility', 'AllUsers'
                )

                /* Insert file details into Data Extension */
                InsertData('YourFileDataExtensionName', 'LeadId', @LeadId, 'FileName', @FileName, 'FileType', @FileType, 'FileContent', @FileContent)
            ENDIF
        NEXT @i
    ENDIF
ENDIF
]%%

<script runat="server">
  Platform.Load("core", "1.1.1");

  var jsonData = '[{"FieldName":"FirstName","FieldValue":"John"},{"FieldName":"LastName","FieldValue":"Doe"},{"FieldName":"Email","FieldValue":"johndoe@example.com"},{"FieldName":"PhoneNumber","FieldValue":"1234567890"}]';

  try {
    var parsedData = Platform.Function.ParseJSON(jsonData);
    if (parsedData && parsedData.length > 0) {
      for (var i = 0; i < parsedData.length; i++) {
        var fieldName = parsedData[i].FieldName;
        var fieldValue = parsedData[i].FieldValue;
        // Perform any operations with fieldName and fieldValue here
        Write('Field Name: ' + fieldName + ', Field Value: ' + fieldValue + '<br>');
      }
    } else {
      Write('No data found.');
    }
  } catch (e) {
    Write('Error parsing JSON data: ' + e);
  }
</script>

24/3/24

<script runat="server">
  Platform.Load("core", "1.1.5");

  // Assuming FileData contains the JSON data
  var fileData = '[{"fileName":"ShellImage.png","fileType":"image/png","fileContent":"filecontent1"},{"fileName":"ShellImage.png","fileType":"image/png","fileContent":"filecontent2"},{"fileName":"ShellImage.png","fileType":"image/png","fileContent":"filecontent3"}]';

  try {
    var parsedData = Platform.Function.ParseJSON(fileData);
    if (parsedData && parsedData.length > 0) {
      var deKey = 'YourDataExtensionExternalKey'; // Replace with your Data Extension External Key
      var de = DataExtension.Init(deKey);
      var rows = [];

      for (var i = 0; i < parsedData.length; i++) {
        var row = {};
        row.FileName = parsedData[i].fileName;
        row.FileType = parsedData[i].fileType;
        row.FileContent = parsedData[i].fileContent;
        rows.push(row);
      }

      var insertResult = de.Rows.Add(rows);
      Write('Rows inserted: ' + insertResult.length);
    } else {
      Write('No data found in FileData variable.');
    }
  } catch (e) {
    Write('Error parsing JSON data or inserting into Data Extension: ' + e);
  }
</script>

--------- 1st approach -----

%%[
VAR @FirstName, @LastName, @Email, @CompanyName, @FileData, @LeadId, @ContentDocumentId

IF RequestParameter('submitted') == 'true' THEN /* Check if form is submitted */
    SET @FirstName = RequestParameter('FirstName')
    SET @LastName = RequestParameter('LastName')
    SET @Email = RequestParameter('Email')
    SET @CompanyName = RequestParameter('CompanyName')
    SET @FileData = RequestParameter('FileData') /* Assuming FileData is the parameter name for file data JSON */

    /* Convert JSON string to array of objects */
    SET @FileDataArray = Replace(@FileData, '[', '')
    SET @FileDataArray = Replace(@FileDataArray, ']', '')
    SET @FileDataArray = BuildRowSetFromString(@FileDataArray, ',')

    /* Create lead in Salesforce */
    SET @LeadObject = CreateSalesforceObject(
        'Lead', 4, /* 4 fields to create */
        'FirstName', @FirstName,
        'LastName', @LastName,
        'Email', @Email,
        'Company', @CompanyName
    )

    IF NOT EMPTY(@LeadObject) THEN /* Check if lead creation is successful */
        SET @LeadId = @LeadObject['id'] /* Get the ID of the created lead */

        /* Loop through each file data object */
        FOR @i = 1 TO RowCount(@FileDataArray) DO
            SET @FileDetails = Row(@FileDataArray, @i)
            SET @FileName = Field(@FileDetails, 1)
            SET @FileType = Field(@FileDetails, 2)
            SET @FileContent = Field(@FileDetails, 3)

            /* Create ContentVersion */
            SET @ContentVersionObject = CreateSalesforceObject(
                'ContentVersion', 7, /* 7 fields to create */
                'VersionData', @FileContent, /* Base64-encoded file content */
                'Title', @FileName,
                'PathOnClient', @FileName,
                'FirstPublishLocationId', @LeadId, /* ParentId (LeadId) */
                'Origin', 'H',
                'FileType', @FileType,
                'ContentLocation', 'S'
            )

            IF NOT EMPTY(@ContentVersionObject) THEN /* Check if ContentVersion creation is successful */
                SET @ContentVersionId = @ContentVersionObject['id'] /* Get the ID of the created ContentVersion */

                /* Create ContentDocument */
                SET @ContentDocumentObject = CreateSalesforceObject(
                    'ContentDocument', 1, /* 1 field to create */
                    'Title', @FileName
                )

                IF NOT EMPTY(@ContentDocumentObject) THEN /* Check if ContentDocument creation is successful */
                    SET @ContentDocumentId = @ContentDocumentObject['id'] /* Get the ID of the created ContentDocument */

                    /* Create ContentDocumentLink to associate ContentDocument with Lead */
                    CreateSalesforceObject(
                        'ContentDocumentLink', 4, /* 4 fields to create */
                        'ContentDocumentId', @ContentDocumentId,
                        'LinkedEntityId', @LeadId,
                        'ShareType', 'V', /* View access */
                        'Visibility', 'AllUsers'
                    )
                ENDIF
            ENDIF
        NEXT @i
    ENDIF
ENDIF
]%%

------ 2nd appraoch -----
%%[
VAR @FirstName, @LastName, @Email, @CompanyName, @FileData, @LeadId, @ContentDocumentId

IF RequestParameter('submitted') == 'true' THEN /* Check if form is submitted */
    SET @FirstName = RequestParameter('FirstName')
    SET @LastName = RequestParameter('LastName')
    SET @Email = RequestParameter('Email')
    SET @CompanyName = RequestParameter('CompanyName')
    SET @FileData = RequestParameter('FileData') /* Assuming FileData is the parameter name for file data JSON */

    /* Parse JSON manually */
    SET @FileDataArray = BuildRowSetFromString(@FileData, ',')
    IF RowCount(@FileDataArray) > 0 THEN
        FOR @i = 1 TO RowCount(@FileDataArray) DO
            SET @Row = Row(@FileDataArray, @i)
            SET @JSONString = Field(@Row, 1)

            /* Extract values from JSON string */
            SET @FileName = Substring(@JSONString, IndexOf(@JSONString, 'fileName":"') + 11, Subtract(IndexOf(@JSONString, '","fileType"'), IndexOf(@JSONString, 'fileName":"') + 11))
            SET @FileType = Substring(@JSONString, IndexOf(@JSONString, 'fileType":"') + 11, Subtract(IndexOf(@JSONString, '","fileContent"'), IndexOf(@JSONString, 'fileType":"') + 11))
            SET @FileContent = Substring(@JSONString, IndexOf(@JSONString, 'fileContent":"') + 14, Subtract(Length(@JSONString), IndexOf(@JSONString, 'fileContent":"') + 13))

            /* Create ContentVersion */
            SET @ContentVersionObject = CreateSalesforceObject(
                'ContentVersion', 7, /* 7 fields to create */
                'VersionData', @FileContent, /* Base64-encoded file content */
                'Title', @FileName,
                'PathOnClient', @FileName,
                'FirstPublishLocationId', @LeadId, /* ParentId (LeadId) */
                'Origin', 'H',
                'FileType', @FileType,
                'ContentLocation', 'S'
            )

            IF NOT EMPTY(@ContentVersionObject) THEN /* Check if ContentVersion creation is successful */
                SET @ContentVersionId = @ContentVersionObject['id'] /* Get the ID of the created ContentVersion */

                /* Create ContentDocument */
                SET @ContentDocumentObject = CreateSalesforceObject(
                    'ContentDocument', 1, /* 1 field to create */
                    'Title', @FileName
                )

                IF NOT EMPTY(@ContentDocumentObject) THEN /* Check if ContentDocument creation is successful */
                    SET @ContentDocumentId = @ContentDocumentObject['id'] /* Get the ID of the created ContentDocument */

                    /* Create ContentDocumentLink to associate ContentDocument with Lead */
                    CreateSalesforceObject(
                        'ContentDocumentLink', 4, /* 4 fields to create */
                        'ContentDocumentId', @ContentDocumentId,
                        'LinkedEntityId', @LeadId,
                        'ShareType', 'V', /* View access */
                        'Visibility', 'AllUsers'
                    )
                ENDIF
            ENDIF
        NEXT @i
    ENDIF
ENDIF
]%%
